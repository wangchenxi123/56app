<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">


    <!--使用Spring方式注入ehcache-->
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation" value="classpath:ehcache.xml" />
        <!--配置为共享模式-->
        <property name="shared" value="true"/>
    </bean>

    <bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManager" ref="cacheManager" />
    </bean>

    <!-- securityManager安全管理器 -->
    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="customRealm"/>
        <!-- 注入session管理器 -->
        <property name="sessionManager" ref="sessionManager"/>
        <property name="cacheManager" ref="shiroCacheManager"/>
        <property name="authorizer.permissionResolver" ref="customUrlPermissonResovler"/>
    </bean>

    <!-- Realm实现 -->
    <bean id="customRealm" class="com.mierro.authority.shiro.CustomRealm">
        <!-- 将凭证匹配器设置到realm中，realm按照凭证匹配器的要求进行散列 -->
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
        <property name="cachingEnabled" value="true"/>
        <property name="authenticationCachingEnabled" value="false"/>
        <property name="authenticationCacheName" value="authenticationCache"/>
        <property name="authorizationCachingEnabled" value="true"/>
        <property name="authorizationCacheName" value="authorizationCache"/>
    </bean>

    <!-- 凭证匹配器 -->
    <bean id="credentialsMatcher" class="com.mierro.authority.shiro.RetryLimitHashedCredentialsMatcher">
        <constructor-arg ref="shiroCacheManager"/>
        <property name="hashAlgorithmName" value="md5"/>
        <property name="hashIterations" value="2"/>
        <property name="storedCredentialsHexEncoded" value="true"/>
        <property name="shiroOnlineLimited" ref="shiroOnlineLimited"/>
    </bean>

    <!-- 自定义权限解析器 -->
    <bean id="customUrlPermissonResovler" class="com.mierro.authority.shiro.CustomUrlPermissonResovler"/>

    <!-- 会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <!-- session的失效时长，单位毫秒 -->
        <property name="globalSessionTimeout" value="7200000"/><!--两个小时-->
        <!-- 删除失效的session -->
        <property name="deleteInvalidSessions" value="true"/>
    </bean>

    <!-- 自定义form认证过虑器 -->
    <!-- 基于Form表单的身份验证过滤器，不配置将也会注册此过虑器，表单中的用户账号、密码及loginurl将采用默认值，建议配置 -->
    <bean id="formAuthenticationFilter"
          class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
        <!-- 表单中账号的input名称 -->
        <property name="usernameParam" value="username" />
        <!-- 表单中密码的input名称 -->
        <property name="passwordParam" value="password" />
        <!-- 记住我input的名称 -->
        <property name="rememberMeParam" value="remember"/>
    </bean>

    <!--并发登陆控制-->
    <bean id="shiroOnlineLimited" class="com.mierro.authority.shiro.ShiroOnlineLimited">
        <!--使用cacheManager获取相应的cache来缓存用户登录的会话；用于保存用户—会话之间的关系的-->
        <property name="cacheManager" ref="shiroCacheManager"/>
        <!--用于根据会话ID，获取会话进行踢出操作的-->
        <property name="sessionManager" ref="sessionManager"/>
        <!--是否踢出后来登录的，默认是false；即后者登录的用户踢出前者登录的用户-->
        <property name="kickoutAfter" value="false"/>
        <!--同一个用户最大的会话数，默认1；比如2的意思是同一个用户允许最多同时两个人登录-->
        <property name="maxSession" value="1"/>
        <!--被踢出后重定向到的地址-->
        <property name="kickoutUrl" value="error/prohibit_landing"/>
    </bean>

    <!-- 自定义权限过滤器 -->
    <bean id="customPermissionCheckFilter"
          class="com.mierro.authority.shiro.CustomPermissionCheckFilter">
        <!-- 未认证跳转的url -->
        <property name="unauthenticatedUrl" value="error/notLogin" />
        <!-- 认证通过无访问权限跳转的url -->
        <property name="unauthorizedUrl" value="error/noAccess"/>
        <!-- 系统维护专挑url -->
        <property name="maintenanceUrl" value="error/maintenance"/>
        <!-- 404 -->
        <property name="notFoundUrl" value="error/notFound"/>
        <property name="urlWithoutPermission">
            <list>
                <!--生成二维码-->
                <value>/QRCode.jpg</value>
                <!--检测账号是否已经被注册-->
                <value>/detection</value>
                <!--注销登陆-->
                <value>/loginout</value>
                <!--生成验证码-->
                <value>/validate.jpg</value>
                <value>/file/uploadImg</value>
                <value>/file/see</value>
                <!--权限登录-->
                <value>/authority/login</value>
                <!--管理员登录-->
                <value>/admin/login</value>
                <!--会员登录-->
                <value>/client/login</value>
                <!--websocket连接-->
                <value>/websocket</value>
                <!--图片上传-->
                <value>/file/uploadImg</value>
                <!--文件查看-->
                <value>/file/see</value>
            </list>
        </property>
    </bean>

    <!--超级管理员访问链接过滤器(维护管理)-->
    <bean id="SuperManagementFilter" class="com.mierro.authority.filter.SuperManagementFilter">
        <property name="failUrl" value="error/access_denied" />
        <property name="notLogin" value="error/notLogin" />
    </bean>

    <!-- web.xml中shiro的filter对应的bean -->
    <!-- Shiro 的Web过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager" />
        <!-- loginUrl认证提交地址，如果没有认证将会请求此地址进行认证，请求此地址将由formAuthenticationFilter进行表单认证 -->
        <property name="loginUrl" value="/index.jsp" />
        <!-- 认证成功统一跳转到first.action，建议不配置，shiro认证成功自动到上一个请求路径 -->
        <!-- <property name="successUrl" value="/successUrl.action"/> -->
        <!-- 通过unauthorizedUrl指定没有授权操作时跳转页面-->
        <property name="unauthorizedUrl" value="/index.jsp" />
        <!-- 自定义filter配置 -->
        <property name="filters">
            <map>
                <entry key="authc" value-ref="formAuthenticationFilter" />
                <entry key="cuspc" value-ref="customPermissionCheckFilter" />
                <entry key="super" value-ref="SuperManagementFilter" />
            </map>
        </property>

        <!-- 过虑器链定义，从上向下顺序执行，一般将/**放在最下边 -->
        <property name="filterChainDefinitions">
            <value>
                /druid/** = super
                /error/** = anon
                /authorization/** = anon
                /websocket/** = anon
                /client/** = anon
                /56admin/** = anon
                /iapppay/** = anon
                /56app/** = anon
                /sendSMS/** = anon
                /=anon
                /** = cuspc
            </value>
        </property>
    </bean>
</beans>